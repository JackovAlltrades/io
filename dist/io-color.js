import{IoSlider,IoThemeSingleton,IoLayerSingleton,IoGl,IoItem}from"./io-core.js";import{IoElement,html}from"./io.js";
/**@License
 * Copyright (c) 2011-2016 Heather Arthur <fayearthur@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
const convert={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(const e of Object.keys(convert)){if(!("channels"in convert[e]))throw new Error("missing channels property: "+e);if(!("labels"in convert[e]))throw new Error("missing channel labels property: "+e);if(convert[e].labels.length!==convert[e].channels)throw new Error("channel and label counts mismatch: "+e);const{channels:t,labels:o}=convert[e];delete convert[e].channels,delete convert[e].labels,Object.defineProperty(convert[e],"channels",{value:t}),Object.defineProperty(convert[e],"labels",{value:o})}convert.rgb.hsl=function(e){const t=e[0]/255,o=e[1]/255,r=e[2]/255,i=Math.min(t,o,r),n=Math.max(t,o,r),s=n-i;let l,a;n===i?l=0:t===n?l=(o-r)/s:o===n?l=2+(r-t)/s:r===n&&(l=4+(t-o)/s),(l=Math.min(60*l,360))<0&&(l+=360);const h=(i+n)/2;return[l,100*(a=n===i?0:h<=.5?s/(n+i):s/(2-n-i)),100*h]},convert.rgb.hsv=function(e){let t,o,r,i,n;const s=e[0]/255,l=e[1]/255,a=e[2]/255,h=Math.max(s,l,a),c=h-Math.min(s,l,a),v=function(e){return(h-e)/6/c+.5};return 0===c?(i=0,n=0):(n=c/h,t=v(s),o=v(l),r=v(a),s===h?i=r-o:l===h?i=1/3+t-r:a===h&&(i=2/3+o-t),i<0?i+=1:i>1&&(i-=1)),[360*i,100*n,100*h]},convert.rgb.hwb=function(e){const t=e[0],o=e[1];let r=e[2];return[convert.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(o,r))),100*(r=1-1/255*Math.max(t,Math.max(o,r)))]},convert.rgb.cmyk=function(e){const t=e[0]/255,o=e[1]/255,r=e[2]/255,i=Math.min(1-t,1-o,1-r);return[100*((1-t-i)/(1-i)||0),100*((1-o-i)/(1-i)||0),100*((1-r-i)/(1-i)||0),100*i]},convert.rgb.xyz=function(e){let t=e[0]/255,o=e[1]/255,r=e[2]/255;return[100*(.4124*(t=t>.04045?((t+.055)/1.055)**2.4:t/12.92)+.3576*(o=o>.04045?((o+.055)/1.055)**2.4:o/12.92)+.1805*(r=r>.04045?((r+.055)/1.055)**2.4:r/12.92)),100*(.2126*t+.7152*o+.0722*r),100*(.0193*t+.1192*o+.9505*r)]},convert.rgb.lab=function(e){const t=convert.rgb.xyz(e);let o=t[0],r=t[1],i=t[2];return[116*(r=(r/=100)>.008856?r**(1/3):7.787*r+16/116)-16,500*((o=(o/=95.047)>.008856?o**(1/3):7.787*o+16/116)-r),200*(r-(i=(i/=108.883)>.008856?i**(1/3):7.787*i+16/116))]},convert.hsl.rgb=function(e){const t=e[0]/360,o=e[1]/100,r=e[2]/100;let i,n,s;if(0===o)return[s=255*r,s,s];const l=2*r-(i=r<.5?r*(1+o):r+o-r*o),a=[0,0,0];for(let e=0;e<3;e++)(n=t+1/3*-(e-1))<0&&n++,n>1&&n--,s=6*n<1?l+6*(i-l)*n:2*n<1?i:3*n<2?l+(i-l)*(2/3-n)*6:l,a[e]=255*s;return a},convert.hsl.hsv=function(e){const t=e[0];let o=e[1]/100,r=e[2]/100,i=o;const n=Math.max(r,.01);return o*=(r*=2)<=1?r:2-r,i*=n<=1?n:2-n,[t,100*(0===r?2*i/(n+i):2*o/(r+o)),100*((r+o)/2)]},convert.hsv.rgb=function(e){const t=e[0]/60,o=e[1]/100;let r=e[2]/100;const i=Math.floor(t)%6,n=t-Math.floor(t),s=255*r*(1-o),l=255*r*(1-o*n),a=255*r*(1-o*(1-n));switch(r*=255,i){case 0:return[r,a,s];case 1:return[l,r,s];case 2:return[s,r,a];case 3:return[s,l,r];case 4:return[a,s,r];case 5:return[r,s,l]}},convert.hsv.hsl=function(e){const t=e[0],o=e[1]/100,r=e[2]/100,i=Math.max(r,.01);let n,s;s=(2-o)*r;const l=(2-o)*i;return n=o*i,[t,100*(n=(n/=l<=1?l:2-l)||0),100*(s/=2)]},convert.hwb.rgb=function(e){const t=e[0]/360;let o=e[1]/100,r=e[2]/100;const i=o+r;let n;i>1&&(o/=i,r/=i);const s=Math.floor(6*t),l=1-r;n=6*t-s,0!=(1&s)&&(n=1-n);const a=o+n*(l-o);let h,c,v;switch(s){default:case 6:case 0:h=l,c=a,v=o;break;case 1:h=a,c=l,v=o;break;case 2:h=o,c=l,v=a;break;case 3:h=o,c=a,v=l;break;case 4:h=a,c=o,v=l;break;case 5:h=l,c=o,v=a}return[255*h,255*c,255*v]},convert.cmyk.rgb=function(e){const t=e[0]/100,o=e[1]/100,r=e[2]/100,i=e[3]/100;return[255*(1-Math.min(1,t*(1-i)+i)),255*(1-Math.min(1,o*(1-i)+i)),255*(1-Math.min(1,r*(1-i)+i))]},convert.xyz.rgb=function(e){const t=e[0]/100,o=e[1]/100,r=e[2]/100;let i,n,s;return i=(i=3.2406*t+-1.5372*o+-.4986*r)>.0031308?1.055*i**(1/2.4)-.055:12.92*i,n=(n=-.9689*t+1.8758*o+.0415*r)>.0031308?1.055*n**(1/2.4)-.055:12.92*n,s=(s=.0557*t+-.204*o+1.057*r)>.0031308?1.055*s**(1/2.4)-.055:12.92*s,[255*(i=Math.min(Math.max(0,i),1)),255*(n=Math.min(Math.max(0,n),1)),255*(s=Math.min(Math.max(0,s),1))]},convert.xyz.lab=function(e){let t=e[0],o=e[1],r=e[2];return[116*(o=(o/=100)>.008856?o**(1/3):7.787*o+16/116)-16,500*((t=(t/=95.047)>.008856?t**(1/3):7.787*t+16/116)-o),200*(o-(r=(r/=108.883)>.008856?r**(1/3):7.787*r+16/116))]},convert.lab.xyz=function(e){let t,o,r;const i=(o=(e[0]+16)/116)**3,n=(t=e[1]/500+o)**3,s=(r=o-e[2]/200)**3;return o=i>.008856?i:(o-16/116)/7.787,t=n>.008856?n:(t-16/116)/7.787,r=s>.008856?s:(r-16/116)/7.787,[t*=95.047,o*=100,r*=108.883]},convert.lab.lch=function(e){const t=e[0],o=e[1],r=e[2];let i;return(i=360*Math.atan2(r,o)/2/Math.PI)<0&&(i+=360),[t,Math.sqrt(o*o+r*r),i]},convert.lch.lab=function(e){const t=e[0],o=e[1],r=e[2]/360*2*Math.PI;return[t,o*Math.cos(r),o*Math.sin(r)]},convert.rgb.ansi16=function(e,t=null){const[o,r,i]=e;let n=null===t?convert.rgb.hsv(e)[2]:t;if(0===(n=Math.round(n/50)))return 30;let s=30+(Math.round(i/255)<<2|Math.round(r/255)<<1|Math.round(o/255));return 2===n&&(s+=60),s},convert.hsv.ansi16=function(e){return convert.rgb.ansi16(convert.hsv.rgb(e),e[2])},convert.rgb.ansi256=function(e){const t=e[0],o=e[1],r=e[2];return t===o&&o===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(o/255*5)+Math.round(r/255*5)},convert.ansi16.rgb=function(e){let t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];const o=.5*(1+~~(e>50));return[(1&t)*o*255,(t>>1&1)*o*255,(t>>2&1)*o*255]},convert.ansi256.rgb=function(e){if(e>=232){const t=10*(e-232)+8;return[t,t,t]}let t;return e-=16,[Math.floor(e/36)/5*255,Math.floor((t=e%36)/6)/5*255,t%6/5*255]},convert.rgb.hex=function(e){const t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},convert.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];let o=t[0];3===t[0].length&&(o=o.split("").map(e=>e+e).join(""));const r=parseInt(o,16);return[r>>16&255,r>>8&255,255&r]},convert.rgb.hcg=function(e){const t=e[0]/255,o=e[1]/255,r=e[2]/255,i=Math.max(Math.max(t,o),r),n=Math.min(Math.min(t,o),r),s=i-n;let l,a;return a=s<=0?0:i===t?(o-r)/s%6:i===o?2+(r-t)/s:4+(t-o)/s+4,a/=6,[360*(a%=1),100*s,100*(l=s<1?n/(1-s):0)]},convert.hsl.hcg=function(e){const t=e[1]/100,o=e[2]/100,r=o<.5?2*t*o:2*t*(1-o);let i=0;return r<1&&(i=(o-.5*r)/(1-r)),[e[0],100*r,100*i]},convert.hsv.hcg=function(e){const t=e[1]/100,o=e[2]/100,r=t*o;let i=0;return r<1&&(i=(o-r)/(1-r)),[e[0],100*r,100*i]},convert.hcg.rgb=function(e){const t=e[0]/360,o=e[1]/100,r=e[2]/100;if(0===o)return[255*r,255*r,255*r];const i=[0,0,0],n=t%1*6,s=n%1,l=1-s;let a=0;switch(Math.floor(n)){case 0:i[0]=1,i[1]=s,i[2]=0;break;case 1:i[0]=l,i[1]=1,i[2]=0;break;case 2:i[0]=0,i[1]=1,i[2]=s;break;case 3:i[0]=0,i[1]=l,i[2]=1;break;case 4:i[0]=s,i[1]=0,i[2]=1;break;default:i[0]=1,i[1]=0,i[2]=l}return a=(1-o)*r,[255*(o*i[0]+a),255*(o*i[1]+a),255*(o*i[2]+a)]},convert.hcg.hsv=function(e){const t=e[1]/100,o=t+e[2]/100*(1-t);let r=0;return o>0&&(r=t/o),[e[0],100*r,100*o]},convert.hcg.hsl=function(e){const t=e[1]/100,o=e[2]/100*(1-t)+.5*t;let r=0;return o>0&&o<.5?r=t/(2*o):o>=.5&&o<1&&(r=t/(2*(1-o))),[e[0],100*r,100*o]},convert.hcg.hwb=function(e){const t=e[1]/100,o=t+e[2]/100*(1-t);return[e[0],100*(o-t),100*(1-o)]},convert.hwb.hcg=function(e){const t=e[1]/100,o=1-e[2]/100,r=o-t;let i=0;return r<1&&(i=(o-r)/(1-r)),[e[0],100*r,100*i]},convert.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},convert.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},convert.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},convert.gray.hsl=function(e){return[0,0,e[0]]},convert.gray.hsv=convert.gray.hsl,convert.gray.hwb=function(e){return[0,100,e[0]]},convert.gray.cmyk=function(e){return[0,0,0,e[0]]},convert.gray.lab=function(e){return[e[0],0,0]},convert.gray.hex=function(e){const t=255&Math.round(e[0]/100*255),o=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(o.length)+o},convert.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]};const IoColorMixin=e=>{const t=class extends e{static get Properties(){return{value:[1,1,1,1],rgb:[1,1,1],hsv:[1,1,1],hsl:[1,1,1],cmyk:[1,1,1,1],alpha:1,mode:0}}static get GlUtils(){return"\n      vec3 hue2rgb(float hue) {\n        hue=fract(hue);\n        float R = abs(hue * 6. - 3.) - 1.;\n        float G = 2. - abs(hue * 6. - 2.);\n        float B = 2. - abs(hue * 6. - 4.);\n        return saturate(vec3(R,G,B));\n      }\n      vec3 hsv2rgb(vec3 hsv) {\n        vec3 rgb = hue2rgb(hsv.r);\n        return ((rgb - 1.) * hsv.g + 1.) * hsv.b;\n      }\n      vec3 hsl2rgb(vec3 hsl) {\n        vec3 rgb = hue2rgb(hsl.x);\n        float C = (1. - abs(2. * hsl.z - 1.)) * hsl.y;\n        return (rgb - 0.5) * C + hsl.z;\n      }\n      vec3 cmyk2rgb(vec4 cmyk) {\n      \tfloat r = 1. - min(1., cmyk.x * (1. - cmyk.w) + cmyk.w);\n      \tfloat g = 1. - min(1., cmyk.y * (1. - cmyk.w) + cmyk.w);\n      \tfloat b = 1. - min(1., cmyk.z * (1. - cmyk.w) + cmyk.w);\n      \treturn vec3(r, g, b);\n      }\n      \n\n"}valueMutated(){this.valueChanged()}modeChanged(){this.valueChanged()}setValueFromRgb(){const e=Object.keys(this.value);switch(this.mode){case 0:this.value[e[0]]=this.rgb[0],this.value[e[1]]=this.rgb[1],this.value[e[2]]=this.rgb[2];break;case 1:{const t=convert.rgb.hsv([255*this.rgb[0],255*this.rgb[1],255*this.rgb[2]]);this.value[e[0]]=t[0]/360,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100;break}case 2:{const t=convert.rgb.hsl([255*this.rgb[0],255*this.rgb[1],255*this.rgb[2]]);this.value[e[0]]=t[0]/360,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100;break}case 3:{const t=convert.rgb.cmyk([255*this.rgb[0],255*this.rgb[1],255*this.rgb[2]]);this.value[e[0]]=t[0]/100,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100,this.value[e[3]]=t[3]/100;break}}this._notifyValueChange()}setValueFromHsv(){const e=Object.keys(this.value);switch(this.mode){case 0:{const t=convert.hsv.rgb([360*this.hsv[0],100*this.hsv[1],100*this.hsv[2]]);this.value[e[0]]=t[0]/255,this.value[e[1]]=t[1]/255,this.value[e[2]]=t[2]/255;break}case 1:this.value[e[0]]=this.hsv[0],this.value[e[1]]=this.hsv[1],this.value[e[2]]=this.hsv[2];break;case 2:{const t=convert.rgb.hsl(convert.hsv.rgb([360*this.hsv[0],100*this.hsv[1],100*this.hsv[2]]));this.value[e[0]]=t[0]/360,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100;break}case 3:{const t=convert.rgb.cmyk(convert.hsv.rgb([360*this.hsv[0],100*this.hsv[1],100*this.hsv[2]]));this.value[e[0]]=t[0]/100,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100,this.value[e[3]]=t[3]/100;break}}this._notifyValueChange()}setValueFromHsl(){const e=Object.keys(this.value);switch(this.mode){case 0:{const t=convert.hsl.rgb([360*this.hsl[0],100*this.hsl[1],100*this.hsl[2]]);this.value[e[0]]=t[0]/255,this.value[e[1]]=t[1]/255,this.value[e[2]]=t[2]/255;break}case 1:{const t=convert.rgb.hsv(convert.hsl.rgb([360*this.hsl[0],100*this.hsl[1],100*this.hsl[2]]));this.value[e[0]]=t[0]/360,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100;break}case 2:this.value[e[0]]=this.hsl[0],this.value[e[1]]=this.hsl[1],this.value[e[2]]=this.hsl[2];break;case 3:{const t=convert.rgb.cmyk(convert.hsl.rgb([360*this.hsl[0],100*this.hsl[1],100*this.hsl[2]]));this.value[e[0]]=t[0]/100,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100,this.value[e[3]]=t[3]/100;break}}this._notifyValueChange()}setValueFromCmyk(){const e=Object.keys(this.value);switch(this.mode){case 0:{const t=convert.cmyk.rgb([100*this.cmyk[0],100*this.cmyk[1],100*this.cmyk[2],100*this.cmyk[3]]);this.value[e[0]]=t[0]/255,this.value[e[1]]=t[1]/255,this.value[e[2]]=t[2]/255;break}case 1:{const t=convert.rgb.hsv(convert.cmyk.rgb([100*this.cmyk[0],100*this.cmyk[1],100*this.cmyk[2],100*this.cmyk[3]]));this.value[e[0]]=t[0]/360,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100;break}case 2:{const t=convert.rgb.hsl(convert.cmyk.rgb([100*this.cmyk[0],100*this.cmyk[1],100*this.cmyk[2],100*this.cmyk[3]]));this.value[e[0]]=t[0]/360,this.value[e[1]]=t[1]/100,this.value[e[2]]=t[2]/100;break}case 3:this.value[e[0]]=this.cmyk[0],this.value[e[1]]=this.cmyk[1],this.value[e[2]]=this.cmyk[2],this.value[e[3]]=this.cmyk[3]}this._notifyValueChange()}valueChanged(){let e=Object.keys(this.value),t=this.mode;-1!==e.indexOf("r")?t=0:-1!==e.indexOf("h")&&-1!==e.indexOf("v")?t=1:-1!==e.indexOf("h")&&-1!==e.indexOf("l")?t=2:-1!==e.indexOf("c")&&(t=3);const o=[];for(let t=0;t<e.length;t++)o.push(this.value[e[t]]);let r,i,n,s,l=void 0;switch(t){case 3:s=[100*o[0],100*o[1],100*o[2],100*o[3]],r=convert.cmyk.rgb(s),i=convert.rgb.hsv(convert.cmyk.rgb(s)),n=convert.rgb.hsl(convert.cmyk.rgb(s)),void 0!==o[4]&&(l=100*o[4]);break;case 2:n=[360*o[0],100*o[1],100*o[2]],r=convert.hsl.rgb(n),i=convert.hsl.hsv(n),s=convert.rgb.cmyk(convert.hsl.rgb(n)),void 0!==o[3]&&(l=100*o[3]);break;case 1:i=[360*o[0],100*o[1],100*o[2]],r=convert.hsv.rgb(i),n=convert.hsv.hsl(i),s=convert.rgb.cmyk(convert.hsv.rgb(i)),void 0!==o[3]&&(l=100*o[3]);break;case 0:default:r=[255*o[0],255*o[1],255*o[2]],i=convert.rgb.hsv(r),n=convert.rgb.hsl(r),s=convert.rgb.cmyk(r),void 0!==o[3]&&(l=100*o[3])}0===i[1]&&(i[0]=360*this.hsv[0]),0===i[2]&&(i[1]=100*this.hsv[1]),0===n[1]&&(n[0]=360*this.hsl[0]),0!==n[2]&&100!==n[2]||(n[0]=360*this.hsl[0],n[1]=100*this.hsl[1]),100===s[3]&&(s[0]=100*this.cmyk[0],s[1]=100*this.cmyk[1],s[2]=100*this.cmyk[2]),this.setProperties({rgb:[r[0]/255,r[1]/255,r[2]/255],hsv:[i[0]/360,i[1]/100,i[2]/100],hsl:[n[0]/360,n[1]/100,n[2]/100],cmyk:[s[0]/100,s[1]/100,s[2]/100,s[3]/100],alpha:void 0!==l?l/100:void 0,mode:t})}};return t.Register=IoElement.Register,t};class IoColorSlider extends(IoColorMixin(IoSlider)){static get Style(){return html`<style>:host {border-width: 2px;}</style>`}static get Properties(){return{value:[1,1,1,1],step:.001,min:0,max:1}}static get GlUtils(){return"\n    vec4 paintColorSlider(vec2 position, vec3 color) {\n      // return paintSlider(position, color);\n      vec4 slotColor = vec4(.2, .2, .2, 1.);\n      vec4 fillColor = vec4(.8, .8, .8, 1.);\n      vec4 sliderColor = vec4(0.);\n      float slotWidth = cssStrokeWidth * 1.5;\n      float radius = cssItemHeight / 4.;\n      float stroke = cssStrokeWidth;\n      float strokeShape = min(circle(position, radius + stroke), rectangle(position - vec2(0., 2500.), vec2(slotWidth + stroke, 5000.)));\n      sliderColor = mix(vec4(slotColor.rgb, 1.), sliderColor, strokeShape);\n      float fillShape = min(circle(position, radius), rectangle(position - vec2(0., 2500.), vec2(slotWidth, 5000.)));\n      sliderColor = mix(fillColor, sliderColor, fillShape);\n      float colorShape = min(circle(position, radius - stroke), rectangle(position - vec2(0., 2500.), vec2(slotWidth - stroke, 5000.)));\n      sliderColor = mix(vec4(color, 1.), sliderColor, colorShape);\n      return sliderColor;\n    }\n    vec4 paintColorSlider2D(vec2 position, vec3 color) {\n      vec4 sliderColor = vec4(0.);\n      float radius = cssItemHeight / 4.;\n      float stroke = cssStrokeWidth;\n      vec4 slotColor = vec4(.2, .2, .2, 1.);\n      vec4 fillColor = vec4(.8, .8, .8, 1.);\n      vec2 width = (uHorizontal == 1) ? vec2(stroke * 2., uSize.y) : vec2(uSize.x, stroke * 2.);\n      float strokeShape = circle(position, radius + stroke);\n      sliderColor = mix(slotColor, sliderColor, strokeShape);\n      float fillShape = circle(position, radius);\n      sliderColor = mix(fillColor, sliderColor, fillShape);\n      float colorShape = circle(position, radius - stroke);\n      sliderColor = mix(vec4(color, 1.), sliderColor, colorShape);\n      return sliderColor;\n    }\n    \n\n"}valueMutated(){this.valueChanged()}setAria(){}_onKeydown(e){super._onKeydown(e),this._notifyValueChange()}_setIncrease(){}_setDecrease(){}_setMin(){this._setValue(0,0)}_setMax(){this._setValue(1,1)}_onPointermoveDebounced(e){super._onPointermoveDebounced(e),this._notifyValueChange()}_notifyValueChange(){this.dispatchEvent("object-mutated",{object:this.value},!1,window),this.dispatchEvent("value-set",{property:"value",value:this.value},!1)}_setValue(){}}IoColorSlider.Register();class IoColorSliderRed extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = vec3(uv.x, uRgb[1], uRgb[2]);\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uRgb[0], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.rgb[0]=Math.min(1,this.rgb[0]+.01),this.setValueFromRgb()}_setDecrease(){this.rgb[0]=Math.max(0,this.rgb[0]-.01),this.setValueFromRgb()}_setValue(e){this.rgb[0]=e,this.setValueFromRgb()}}IoColorSliderRed.Register();class IoColorSliderGreen extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = vec3(uRgb[0], uv.x, uRgb[2]);\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uRgb[1], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.rgb[1]=Math.min(1,this.rgb[1]+.01),this.setValueFromRgb()}_setDecrease(){this.rgb[1]=Math.max(0,this.rgb[1]-.01),this.setValueFromRgb()}_setValue(e){this.rgb[1]=e,this.setValueFromRgb()}}IoColorSliderGreen.Register();class IoColorSliderBlue extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = vec3(uRgb[0], uRgb[1], uv.x);\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uRgb[2], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.rgb[2]=Math.min(1,this.rgb[2]+.01),this.setValueFromRgb()}_setDecrease(){this.rgb[2]=Math.max(0,this.rgb[2]-.01),this.setValueFromRgb()}_setValue(e){this.rgb[2]=e,this.setValueFromRgb()}}IoColorSliderBlue.Register();class IoColorSliderHue extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Hue spectrum\n        vec3 finalColor = hsv2rgb(vec3(uv.x, uHsv[1], uHsv[2]));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uHsv[0], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.hsv[0]=Math.min(1,this.hsv[0]+.01),this.setValueFromHsv()}_setDecrease(){this.hsv[0]=Math.max(0,this.hsv[0]-.01),this.setValueFromHsv()}_setValue(e){this.hsv[0]=e,this.setValueFromHsv()}}IoColorSliderHue.Register();class IoColorSliderSaturation extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Saturation gradient\n        vec3 finalColor = hsv2rgb(vec3(uHsv[0], uv.x, uHsv[2]));\n        float saturation = uHsv[1];\n        if (uMode == 2.0) {\n          saturation = uHsl[1];\n          finalColor = hsl2rgb(vec3(uHsl[0], uv.x, uHsl[2]));\n        }\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * saturation, size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.hsv[1]=Math.min(1,this.hsv[1]+.01),this.setValueFromHsv()}_setDecrease(){this.hsv[1]=Math.max(0,this.hsv[1]-.01),this.setValueFromHsv()}_setValue(e){this.hsv[1]=e,this.setValueFromHsv()}}IoColorSliderSaturation.Register();class IoColorSliderValue extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = hsv2rgb(vec3(uHsv[0], uHsv[1], uv.x));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uHsv[2], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.hsv[2]=Math.min(1,this.hsv[2]+.01),this.setValueFromHsv()}_setDecrease(){this.hsv[2]=Math.max(0,this.hsv[2]-.01),this.setValueFromHsv()}_setValue(e){this.hsv[2]=e,this.setValueFromHsv()}}IoColorSliderValue.Register();class IoColorSliderLevel extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = hsl2rgb(vec3(uHsl[0], uHsl[1], uv.x));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uHsl[2], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.hsv[2]=Math.min(1,this.hsv[2]+.01),this.setValueFromHsl()}_setDecrease(){this.hsv[2]=Math.max(0,this.hsv[2]-.01),this.setValueFromHsl()}_setValue(e){this.hsl[2]=e,this.setValueFromHsl()}}IoColorSliderLevel.Register();class IoColorSliderHs extends IoColorSlider{static get Style(){return html`<style>:host {cursor: move !important;}</style>`}static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // HS gradient\n        vec3 finalColor = hsv2rgb(vec3(uv, uHsv[2]));\n        if (uMode == 2.0) {\n          finalColor = hsl2rgb(vec3(uv, uHsl[2]));\n        }\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uHsv[0], size.y * uHsv[1]));\n        vec4 slider = paintColorSlider2D(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_onKeydown(e){e.shiftKey&&"ArrowLeft"===e.key?(e.preventDefault(),this.horizontal?this.hsv[0]=Math.max(0,this.hsv[0]-.01):this.hsv[1]=Math.max(0,this.hsv[1]-.01),this.setValueFromHsv()):e.shiftKey&&"ArrowUp"===e.key?(e.preventDefault(),this.horizontal?this.hsv[1]=Math.min(1,this.hsv[1]+.01):this.hsv[0]=Math.min(1,this.hsv[0]+.01),this.setValueFromHsv()):e.shiftKey&&"ArrowRight"===e.key?(e.preventDefault(),this.horizontal?this.hsv[0]=Math.min(1,this.hsv[0]+.01):this.hsv[1]=Math.min(1,this.hsv[1]+.01),this.setValueFromHsv()):e.shiftKey&&"ArrowDown"===e.key?(e.preventDefault(),this.horizontal?this.hsv[1]=Math.max(0,this.hsv[1]-.01):this.hsv[0]=Math.max(0,this.hsv[0]-.01),this.setValueFromHsv()):super._onKeydown(e)}_setValue(e,t){this.hsv[0]=e,this.hsv[1]=t,this.setValueFromHsv()}}IoColorSliderHs.Register();class IoColorSliderSv extends IoColorSlider{static get Style(){return html`<style>:host {cursor: move !important;}</style>`}static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // SV gradient\n        vec3 finalColor = hsv2rgb(vec3(uHsv[0], uv));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uHsv[1], size.y * uHsv[2]));\n        vec4 slider = paintColorSlider2D(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setValue(e,t){this.hsv[1]=e,this.hsv[2]=t,this.setValueFromHsv()}}IoColorSliderSv.Register();class IoColorSliderSl extends IoColorSlider{static get Style(){return html`<style>:host {cursor: move !important;}</style>`}static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // SV gradient\n        vec3 finalColor = hsl2rgb(vec3(uHsl[0], uv));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uHsl[1], size.y * uHsl[2]));\n        vec4 slider = paintColorSlider2D(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setValue(e,t){this.hsl[1]=e,this.hsl[2]=t,this.setValueFromHsl()}}IoColorSliderSl.Register();class IoColorSliderCyan extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = cmyk2rgb(vec4(uv.x, uCmyk[1], uCmyk[2], uCmyk[3]));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uCmyk[0], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.cmyk[0]=Math.min(1,this.cmyk[0]+.01),this.setValueFromCmyk()}_setDecrease(){this.cmyk[0]=Math.max(0,this.cmyk[0]-.01),this.setValueFromCmyk()}_setValue(e){this.cmyk[0]=e,this.setValueFromCmyk()}}IoColorSliderCyan.Register();class IoColorSliderMagenta extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = cmyk2rgb(vec4(uCmyk[0], uv.x, uCmyk[2], uCmyk[3]));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uCmyk[1], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.cmyk[1]=Math.min(1,this.cmyk[1]+.01),this.setValueFromCmyk()}_setDecrease(){this.cmyk[1]=Math.max(0,this.cmyk[1]-.01),this.setValueFromCmyk()}_setValue(e){this.cmyk[1]=e,this.setValueFromCmyk()}}IoColorSliderMagenta.Register();class IoColorSliderYellow extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = cmyk2rgb(vec4(uCmyk[0], uCmyk[1], uv.x, uCmyk[3]));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uCmyk[2], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.cmyk[2]=Math.min(1,this.cmyk[2]+.01),this.setValueFromCmyk()}_setDecrease(){this.cmyk[2]=Math.max(0,this.cmyk[2]-.01),this.setValueFromCmyk()}_setValue(e){this.cmyk[2]=e,this.setValueFromCmyk()}}IoColorSliderYellow.Register();class IoColorSliderKey extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Value gradient\n        vec3 finalColor = cmyk2rgb(vec4(uCmyk[0], uCmyk[1], uCmyk[2], uv.x));\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uCmyk[3], size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, uRgb);\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}_setIncrease(){this.cmyk[3]=Math.min(1,this.cmyk[3]+.01),this.setValueFromCmyk()}_setDecrease(){this.cmyk[3]=Math.max(0,this.cmyk[3]-.01),this.setValueFromCmyk()}_setValue(e){this.cmyk[3]=e,this.setValueFromCmyk()}}IoColorSliderKey.Register();class IoColorSliderAlpha extends IoColorSlider{static get Frag(){return"\n      varying vec2 vUv;\n\n      void main(void) {\n        vec2 size = (uHorizontal == 1) ? uSize : uSize.yx;\n        vec2 uv = uHorizontal == 1 ? vUv.xy : vUv.yx;\n        vec2 position = size * uv;\n\n        // Alpha pattern\n        vec3 alphaPattern = mix(vec3(0.5), vec3(1.0), checker(position, 6.));\n        vec3 finalColor = alphaPattern;\n\n        // Apha gradient\n        finalColor = mix(finalColor, vec3(1.0), uv.x);\n\n        // Marker\n        vec2 markerPos = translate(position, vec2(size.x * uAlpha, size.y * 0.5));\n        vec4 slider = paintColorSlider(markerPos, vec3(1.0));\n        finalColor = mix(finalColor, slider.rgb, slider.a);\n\n        gl_FragColor = vec4(finalColor, 1.0);\n      }\n    "}setAria(){const e=3===this.mode?4:3,t=Object.keys(this.value),o=void 0!==this.value[t[e]];this.setAttribute("aria-invalid",!o&&"true")}_setIncrease(){const e=3===this.mode?4:3,t=Object.keys(this.value);this.value[t[e]]=Math.min(1,this.value[t[e]]+.01)}_setDecrease(){const e=3===this.mode?4:3,t=Object.keys(this.value);this.value[t[e]]=Math.max(0,this.value[t[e]]-.01)}_setMin(){const e=3===this.mode?4:3,t=Object.keys(this.value);this.value[t[e]]=0}_setMax(){const e=3===this.mode?4:3,t=Object.keys(this.value);this.value[t[e]]=1}_setValue(e){const t=3===this.mode?4:3,o=Object.keys(this.value);void 0!==this.value[o[t]]&&(this.value[o[t]]=e)}}IoColorSliderAlpha.Register();class IoColorPanel extends(IoColorMixin(IoElement)){static get Style(){return html`<style>:host {${IoThemeSingleton.panel}}:host {display: flex;cursor: move;align-items: stretch;min-width: var(--io-line-height);min-height: var(--io-line-height);flex-direction: column;}:host[horizontal] {flex-direction: row;}:host > * {border-radius: calc(var(--io-border-radius) - var(--io-border-width));}:host > io-color-slider-sl,:host > io-color-slider-sv {flex: 1 1;}:host > *:not(:last-child) {margin: 0 0 var(--io-spacing) 0;}:host[horizontal] > *:not(:last-child) {margin: 0 var(--io-spacing) 0 0;}</style>`}static get Properties(){return{expanded:{type:Boolean,reflect:1},horizontal:{value:!0,reflect:1}}}static get Listeners(){return{keydown:"_onKeydown"}}_onKeydown(e){"Escape"!==e.key&&"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),this.expanded=!1)}changed(){this.template([2===this.mode?["io-color-slider-sl",{value:this.value,mode:this.mode}]:["io-color-slider-sv",{value:this.value,mode:this.mode}],["io-color-slider-hue",{value:this.value,mode:this.mode,horizontal:!this.horizontal}],void 0!==this.alpha?["io-color-slider-alpha",{value:this.value,horizontal:!this.horizontal}]:null])}}IoColorPanel.Register();const IoColorPanelSingleton=new IoColorPanel;IoLayerSingleton.appendChild(IoColorPanelSingleton),IoColorPanelSingleton.addEventListener("expanded-changed",IoLayerSingleton.onChildExpanded);class IoColorSwatch extends(IoColorMixin(IoGl)){static get Style(){return html`<style>:host {box-sizing: border-box;border-radius: var(--io-border-radius);border: var(--io-border);border-color: var(--io-color-border-inset);min-width: var(--io-item-height);min-height: var(--io-item-height);}:host[aria-invalid] {border: var(--io-border-error);}:host:focus {border-color: var(--io-color-focus);outline-color: var(--io-color-focus);}</style>`}static get Frag(){return"\n      varying vec2 vUv;\n      void main(void) {\n        vec2 position = vUv * uSize;\n\n        // Alpha pattern\n        vec3 alphaPattern = mix(vec3(0.5), vec3(1.0), checker(position, 6.));\n\n        float alpha = uAlpha;\n        float lineWidth = cssStrokeWidth * 2.0;\n        vec2 pxUv = vUv * uSize;\n        if (pxUv.x < lineWidth) alpha = 1.0;\n        if (pxUv.y < lineWidth) alpha = 1.0;\n        if (pxUv.x > uSize.x - lineWidth) alpha = 1.0;\n        if (pxUv.y > uSize.y - lineWidth) alpha = 1.0;\n\n        gl_FragColor = saturate(vec4(mix(alphaPattern, uRgb.rgb, alpha), 1.0));\n      }\n    "}}IoColorSwatch.Register();class IoColorPicker extends(IoColorMixin(IoItem)){static get Style(){return html`<style>:host {display: flex;box-sizing: border-box;border-radius: var(--io-border-radius);border: var(--io-border);border-color: var(--io-color-border-inset);min-width: var(--io-item-height);min-height: var(--io-item-height);padding: 0;}:host > io-color-swatch {border: 0;flex: 1 1 auto;min-width: 0;min-height: 0;border-radius: 0;}</style>`}static get Properties(){return{value:[.5,.5,.5,.5],horizontal:!1,role:"slider",tabindex:0}}static get Listeners(){return{click:"_onClick",keydown:"_onKeydown"}}_onClick(){event.preventDefault(),this.focus(),this.toggle()}get expanded(){return IoColorPanelSingleton.expanded&&IoLayerSingleton.srcElement===this}_onKeydown(e){const t=this.getBoundingClientRect(),o=IoColorPanelSingleton.getBoundingClientRect();"Enter"===e.key||" "===e.key?(e.preventDefault(),this.toggle(),this.expanded&&IoColorPanelSingleton.firstChild.focus()):this.expanded&&o.top>=t.bottom&&"ArrowDown"===e.key?(e.preventDefault(),IoColorPanelSingleton.firstChild.focus()):this.expanded&&o.bottom<=t.top&&"ArrowUp"===e.key?(e.preventDefault(),IoColorPanelSingleton.firstChild.focus()):(this.collapse(),super._onKeydown(e))}toggle(){this.expanded?this.collapse():this.expand()}expand(){const e=void 0!==this.alpha;IoColorPanelSingleton.value=this.value,IoColorPanelSingleton.mode=this.mode,IoColorPanelSingleton.style.width=e?"192px":"160px",IoColorPanelSingleton.style.height="128px",IoColorPanelSingleton.expanded=!0,IoLayerSingleton.srcElement=this,IoLayerSingleton.setElementPosition(IoColorPanelSingleton,"bottom",this.getBoundingClientRect())}collapse(){IoColorPanelSingleton.expanded=!1,IoLayerSingleton.srcElement=void 0}changed(){this.template([["io-color-swatch",{value:this.value,mode:this.mode}]])}}IoColorPicker.Register();class IoColorVector extends(IoColorMixin(IoElement)){static get Style(){return html`<style>:host {display: flex;flex-direction: row;align-self: stretch;justify-self: stretch;}:host > io-number {width: inherit;flex: 1 1;}:host > *:not(:last-child) {margin-right: var(--io-spacing);}:host > io-color-picker {width: calc(var(--io-line-height) + calc(2 * var(--io-spacing)));}</style>`}static get Properties(){return{value:[0,0,0,0],conversion:1,step:.01,min:0,max:1}}_onValueSet(e){const t=e.composedPath()[0].id,o=e.detail.value,r=e.detail.oldValue;this.value[t]=o;const i={object:this.value,property:this.linked?null:t,value:o,oldValue:r};this.dispatchEvent("object-mutated",i,!1,window)}changed(){const e=[],t=Object.keys(this.value);for(let o in t){const r=t[o];void 0!==this.value[r]&&e.push(["io-number",{id:r,value:this.value[r],conversion:this.conversion,step:this.step,min:this.min,max:this.max,ladder:!0,"on-value-set":this._onValueSet}])}e.push(this.getSlotted()),this.template(e)}getSlotted(){return["io-color-picker",{id:"swatch",mode:this.mode,value:this.value}]}}IoColorVector.Register();export{IoColorPanel,IoColorPicker,IoColorSlider,IoColorSliderAlpha,IoColorSliderBlue,IoColorSliderCyan,IoColorSliderGreen,IoColorSliderHs,IoColorSliderHue,IoColorSliderKey,IoColorSliderLevel,IoColorSliderMagenta,IoColorSliderRed,IoColorSliderSaturation,IoColorSliderSl,IoColorSliderSv,IoColorSliderValue,IoColorSliderYellow,IoColorVector};